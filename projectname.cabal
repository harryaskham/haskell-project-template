cabal-version:          2.4
name:                   projectname
version:                0.1.0.0
author:                 Harry Askham
maintainer:             harryaskham@gmail.com

common common-settings
    -- To upgrade base, bump to a compatible cabal-version at the top of the file from https://www.snoyman.com/base/
    -- i.e. base 4.19.0.0 pairs with cabal 3.10.2.0, 4.18.1.0 pairs with cabal 3.10.1.0 (the latter is the newest available on nixpkgs as of Nov 2023)
    -- Actually for Darwin it's worse, newest is 3.6.20 - newest compat base is 4.15.1.0
    -- Also needs corresponding GHC version, here 9.0.2 at least (9_2_1 is available on Darwin)
    -- Note you actually need to have that cabal version installed:
    -- See https://raw.githubusercontent.com/NixOS/nixpkgs/nixos-23.05/pkgs/development/haskell-modules/hackage-packages.nix for available versions
    -- Also cabal2nix only supports certain cabal versions
    -- All are in home-packages-dev.nix
    build-depends:      base ^>=4.14.3.0,
                        relude
    default-language:   Haskell2010
    mixins:             base hiding (Prelude),
                        relude (Relude as Prelude),
                        relude
    default-extensions: OverloadedStrings,
                        TupleSections,
                        LambdaCase,
                        MultiWayIf,
                        ImportQualifiedPost,
                        EmptyCase,
                        FlexibleContexts,
                        FlexibleInstances,
                        InstanceSigs,
                        MultiParamTypeClasses,
                        NamedFieldPuns,
                        DeriveFoldable,
                        DeriveFunctor,
                        DeriveGeneric,
                        DeriveLift,
                        DeriveTraversable,
                        DerivingStrategies,
                        GeneralizedNewtypeDeriving,
                        StandaloneDeriving,
                        ScopedTypeVariables,
                        ConstraintKinds,
                        RankNTypes,
                        TypeApplications,
                        ApplicativeDo,
                        DefaultSignatures,
                        PatternSynonyms,
                        ExistentialQuantification,
                        FunctionalDependencies,
                        GADTs,
                        QuasiQuotes,
                        TypeFamilies
    ghc-options:        -Weverything
                        -Wno-implicit-prelude
                        -Wno-missing-export-lists
                        -Wno-missing-deriving-strategies
                        -Wno-missing-safe-haskell-mode
                        -Wno-missing-exported-signatures
                        -Wno-missing-import-lists
                        -Wno-missed-specialisations
                        -Wno-all-missed-specialisations
                        -Wno-unsafe
                        -Wno-safe
                        -Wno-missing-local-signatures
                        -Wno-monomorphism-restriction

library
    import:             common-settings
    hs-source-dirs:     src
    exposed-modules:    Lib

executable projectname
    import:             common-settings
    main-is:            Main.hs
    hs-source-dirs:     app,
                        src
    other-modules:      Lib

Test-Suite projectname-testsuite
    import:             common-settings
    main-is:            TestSuite.hs
    type:               exitcode-stdio-1.0
    hs-source-dirs:     test
                        src
    other-modules:      Lib
    build-depends:      QuickCheck,
                        HUnit
